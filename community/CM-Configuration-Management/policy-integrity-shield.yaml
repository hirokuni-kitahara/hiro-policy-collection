apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-integrity-shield
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-5 Access Restrictions for Change
    integrityshield.io/message: 
    integrityshield.io/signature: LS0tLS1CRUdJTiBQR1AgU0lHTkFUVVJFLS0tLS0KCmlRRlBCQUFCQ0FBNUZpRUUrU2psQVN5SlZoa3FGVDNLT1Q2Y3pnLzRpcmtGQW1BS2NaRWJIR2hwY205cmRXNXAKTG10cGRHRm9ZWEpoTVVCcFltMHVZMjl0QUFvSkVEaytuTTRQK0lxNStIUUgvangxUXRpai9lUS9NUW9peU1IRgpzejdla1BnY214aXlvTEFITDZFcXdqQzMwL29YZUZLYmNYUURTaWVTRHovR1pJemJSMk50UW5lM2hlanhJT0NvCjFuMG56OE9kcVdhNW9xS1dscnZxNWh4OUwrRndwWk81NjFTWHRTVGx6Z3NXclF3N3BmQ0xFNDlaa1lRN1g1NTIKTEtsZWVHSm0yWkFTTVNRRnpRVEVCQXZmVmhCRkF0SDJiUFF2dFlYTW0wclhsa1JrQlE2dHdCRU9neTJWOW03WQpSREhHck9hZ3VRM2xrS2NETlZGem1Ma1ZEZ3dwaU5paDc0UHFNOEFkdER6SGIyc2ppMDZBeG5TcHFENTd0K2puCmZkdGlyc3l1ZTVodDd2b2pIWkZjc1NmMmVQUk1PaW4vaHVtMEVEV25Xa2dDZUlEV0piYkJYa3lHTWdSLyttZE8KcW9VPQo9VWZiUgotLS0tLUVORCBQR1AgU0lHTkFUVVJFLS0tLS0K
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-namespace
      spec:
        remediationAction: enforce
        severity: High
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            kind: Namespace
            apiVersion: v1
            metadata:
              name: integrity-shield-operator-system
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-og
      spec:
        remediationAction: enforce
        severity: high
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: integrity-operator-group
              namespace: integrity-shield-operator-system
            spec:
              targetNamespaces:
              - integrity-shield-operator-system
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-catrsc
      spec:
        remediationAction: enforce
        severity: high
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: CatalogSource
            metadata:
              name: integrity-shield-operator-catalog
              namespace: openshift-marketplace
            spec:
              displayName: Integrity Shield Operator
              image: quay.io/open-cluster-management/integrity-shield-operator-index:0.1.3
              publisher: IBM
              sourceType: grpc
              updateStrategy:
                registryPoll:
                  interval: 45m
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-sub
      spec:
        remediationAction: enforce
        severity: high
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: integrity-shield-operator
              namespace: integrity-shield-operator-system
            spec:
              channel: alpha
              installPlanApproval: Automatic
              name: integrity-shield-operator
              source: integrity-shield-operator-catalog
              sourceNamespace: openshift-marketplace
              startingCSV: integrity-shield-operator.v0.1.3
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-cr
      spec:
        remediationAction: enforce
        severity: high
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: apis.integrityshield.io/v1alpha1
            kind: IntegrityShield
            metadata:
              name: integrity-shield-server
              namespace: integrity-shield-operator-system
            spec:
              imagePullSecrets:
              - name: mappregkey
              logger:
                # image: us.icr.io/mutation-advisor/integrity-shield-logging:0.1.4dev
                # image: quay.io/open-cluster-management/integrity-shield-logging:0.1.3
                imagePullPolicy: Always
              server:
                # image: us.icr.io/mutation-advisor/integrity-shield-server:0.1.4dev
                # image: quay.io/open-cluster-management/integrity-shield-server:0.1.3
                imagePullPolicy: Always
              affinity: {}
              shieldConfig:
                iShieldAdminUserName: "system:serviceaccount:open-cluster-management-agent-addon:klusterlet-addon-policyctrl"
                inScopeNamespaceSelector:
                  include:
                  - "*"
                  exclude:
                  - "kube-*"
                  - "openshift-*"
              signerConfig:
                policies:
                - namespaces:
                  - "*"
                  signers:
                  - "SampleSigner"
                - scope: "Cluster"
                  signers:
                  - "SampleSigner"
                signers:
                - name: "SampleSigner"
                  keyConfig: sample-signer-keyconfig
                  subjects:
                  - email: "*"
              keyConfig:
              - name: sample-signer-keyconfig
                secretName: keyring-secret
              resourceSigningProfiles:
              - name: policy-rsp
                protectRules:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                ignoreRules:
                - match:
                  - username: "system:serviceaccount:open-cluster-management-agent:*"
                  - username: "system:serviceaccount:open-cluster-management-agent-addon:*"
                forceCheckRules:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                    kind: Policy
                kustomizePatterns:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                    kind: Policy
                  namePrefix: "*."
                unprotectAttrs:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                  attrs:
                  - "metadata.annotations.\"apps.open-cluster-management.io/hosting-deployable\""
                  - "metadata.annotations.\"apps.open-cluster-management.io/hosting-subscription\""
                  - "metadata.annotations.\"apps.open-cluster-management.io/sync-source\""
                  - "metadata.labels.\"policy.open-cluster-management.io/cluster-name\""
                  - "metadata.labels.\"policy.open-cluster-management.io/cluster-namespace\""
                  - "metadata.labels.\"policy.open-cluster-management.io/root-policy\""
                targetNamespaceSelector:
                  labelSelector:
                    matchExpressions:
                    - key: policy.open-cluster-management.io/isClusterNamespace
                      operator: In
                      values: ["true"]
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-integrity-shield
placementRef:
  name: placement-policy-integrity-shield
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-integrity-shield
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-integrity-shield
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
    - {key: environment, operator: In, values: ["dev"]}
