# This policy verifies the installation of Integrity Shield on the managed clusters.
# 
# "enforce", it will install Integirty Shield operator

apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: update-test-policy-integrity-shield
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-5 Access Restrictions for Change
    integrityshield.io/message: 
    integrityshield.io/signature: LS0tLS1CRUdJTiBQR1AgU0lHTkFUVVJFLS0tLS0KCmlRRlBCQUFCQ0FBNUZpRUUrU2psQVN5SlZoa3FGVDNLT1Q2Y3pnLzRpcmtGQW1BWkRDOGJIR2hwY205cmRXNXAKTG10cGRHRm9ZWEpoTVVCcFltMHVZMjl0QUFvSkVEaytuTTRQK0lxNXJwRUlBSXZwT2NxWGUrcGt2RHVLSUcvbgppem9iRXIyVFRFZlpyQWc3SFFiUGZDazRRSDhtcXBIRTRSS0R4UkQ5ajFhMUg3TWxSOUZxVStUS0REZjB0MXhmCi8zZ0RPZjcvdkEvczVNL1RKNjJPQ2hwMnI1N0ZMTklUcDMvMFJDWGJqdEFEdU1oSzNyaktjcUIrbjNSeDRzd1oKdjY0RFpWdXFETy8velNTYlpCNGw5QTFielppZmZtakdjVnVsaTN5eWhORjhQVmlvTXg2Nm4zSkFOTmdZR0JmYwpoMmxWakVMS0loTUVrczdwbDBkbjB3dHpTL2MxQmgxYzIvMFc5UkdBTHd0aXRpeGMwcHBGS1NNcGRtOThtTURHClZxdGF2UnZYSkxXT2cveGtUb0NTakxrV2pYaG1KTHFkNzRhRENxZk9DaUZTZW51YXdlaHd1SjNWSGNZY0daTDAKUEJzPQo9U2RQeAotLS0tLUVORCBQR1AgU0lHTkFUVVJFLS0tLS0K
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: update-test-policy-integrity-shield-namespace
      spec:
        remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
        severity: High
        object-templates:
        - complianceType: musthave
          objectDefinition:
            kind: Namespace
            apiVersion: v1
            metadata:
              name: integrity-shield-operator-system
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: update-test-policy-integrity-shield-og
      spec:
        remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
        severity: high
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: integrity-operator-group
              namespace: integrity-shield-operator-system
            spec:
              targetNamespaces:
              - integrity-shield-operator-system
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: update-test-policy-integrity-shield-sub
      spec:
        remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
        severity: high
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: integrity-shield-operator
              namespace: integrity-shield-operator-system
            spec:
              channel: alpha
              installPlanApproval: Automatic
              name: integrity-shield-operator
              source: community-operators
              sourceNamespace: openshift-marketplace
              startingCSV: integrity-shield-operator.v0.1.3
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: update-test-policy-integrity-shield-cr
      spec:
        remediationAction: enforce # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
        severity: high
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: apis.integrityshield.io/v1alpha1
            kind: IntegrityShield
            metadata:
              name: integrity-shield-server
              namespace: integrity-shield-operator-system
            spec:
              affinity: {}
              shieldConfig:
                verifyType: pgp # x509
                iShieldAdminUserName: "system:serviceaccount:open-cluster-management-agent-addon:klusterlet-addon-policyctrl"
                inScopeNamespaceSelector:
                  include:
                  - "*"
                  exclude:
                  - "kube-*"
                  - "openshift-*"
              signerConfig:
                policies:
                - namespaces:
                  - "*"
                  signers:
                  - "SampleSigner"
                - scope: "Cluster"
                  signers:
                  - "SampleSigner"
                signers:
                - name: "SampleSigner"
                  keyConfig: sample-signer-keyconfig
                  subjects:
                  - email: "*"
              keyConfig:
              - name: sample-signer-keyconfig
                secretName: keyring-secret
              resourceSigningProfiles:
              - name: update-test-policy-rsp
                protectRules:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                ignoreRules:
                - match:
                  - username: "system:serviceaccount:open-cluster-management-agent:*"
                  - username: "system:serviceaccount:open-cluster-management-agent-addon:*"
                forceCheckRules:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                    kind: Policy
                kustomizePatterns:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                    kind: Policy
                  namePrefix: "*."
                unprotectAttrs:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                  attrs:
                  - "metadata.annotations.\"apps.open-cluster-management.io/hosting-deployable\""
                  - "metadata.annotations.\"apps.open-cluster-management.io/hosting-subscription\""
                  - "metadata.annotations.\"apps.open-cluster-management.io/sync-source\""
                  - "metadata.annotations.\"apps.open-cluster-management.io/reconcile-option\""
                  - "metadata.labels.\"policy.open-cluster-management.io/cluster-name\""
                  - "metadata.labels.\"policy.open-cluster-management.io/cluster-namespace\""
                  - "metadata.labels.\"policy.open-cluster-management.io/root-policy\""
                targetNamespaceSelector:
                  labelSelector:
                    matchExpressions:
                    - key: policy.open-cluster-management.io/isClusterNamespace
                      operator: In
                      values: ["true"]
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: update-test-binding-policy-integrity-shield
placementRef:
  name: update-test-placement-policy-integrity-shield
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: update-test-policy-integrity-shield
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: update-test-placement-policy-integrity-shield
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
    - {key: environment, operator: In, values: ["dev2"]}
