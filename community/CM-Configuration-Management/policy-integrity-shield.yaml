# This policy verifies the installation of Integrity Shield on the managed clusters.
# 
# "enforce" for Namespace, OperatorGroup, Subscription and IntegrityShield, it will install Integirty Shield operator
# "inform" for MutatingWebhookConfiguration, it will check the operator has correctly deployed all operand resources.

apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-integrity-shield
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-5 Access Restrictions for Change
    integrityshield.io/message: IyBUaGlzIHBvbGljeSB2ZXJpZmllcyB0aGUgaW5zdGFsbGF0aW9uIG9mIEludGVncml0eSBTaGllbGQgb24gdGhlIG1hbmFnZWQgY2x1c3RlcnMuCiMgCiMgImVuZm9yY2UiIGZvciBOYW1lc3BhY2UsIE9wZXJhdG9yR3JvdXAsIFN1YnNjcmlwdGlvbiBhbmQgSW50ZWdyaXR5U2hpZWxkLCBpdCB3aWxsIGluc3RhbGwgSW50ZWdpcnR5IFNoaWVsZCBvcGVyYXRvcgojICJpbmZvcm0iIGZvciBNdXRhdGluZ1dlYmhvb2tDb25maWd1cmF0aW9uLCBpdCB3aWxsIGNoZWNrIHRoZSBvcGVyYXRvciBoYXMgY29ycmVjdGx5IGRlcGxveWVkIGFsbCBvcGVyYW5kIHJlc291cmNlcy4KCmFwaVZlcnNpb246IHBvbGljeS5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pby92MQpraW5kOiBQb2xpY3kKbWV0YWRhdGE6CiAgbmFtZTogcG9saWN5LWludGVncml0eS1zaGllbGQKICBhbm5vdGF0aW9uczoKICAgIHBvbGljeS5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pby9zdGFuZGFyZHM6IE5JU1QgU1AgODAwLTUzCiAgICBwb2xpY3kub3Blbi1jbHVzdGVyLW1hbmFnZW1lbnQuaW8vY2F0ZWdvcmllczogQ00gQ29uZmlndXJhdGlvbiBNYW5hZ2VtZW50CiAgICBwb2xpY3kub3Blbi1jbHVzdGVyLW1hbmFnZW1lbnQuaW8vY29udHJvbHM6IENNLTUgQWNjZXNzIFJlc3RyaWN0aW9ucyBmb3IgQ2hhbmdlCnNwZWM6CiAgcmVtZWRpYXRpb25BY3Rpb246IGVuZm9yY2UKICBkaXNhYmxlZDogZmFsc2UKICBwb2xpY3ktdGVtcGxhdGVzOgogIC0gb2JqZWN0RGVmaW5pdGlvbjoKICAgICAgYXBpVmVyc2lvbjogcG9saWN5Lm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvL3YxCiAgICAgIGtpbmQ6IENvbmZpZ3VyYXRpb25Qb2xpY3kKICAgICAgbWV0YWRhdGE6CiAgICAgICAgbmFtZTogcG9saWN5LWludGVncml0eS1zaGllbGQtbmFtZXNwYWNlCiAgICAgIHNwZWM6CiAgICAgICAgcmVtZWRpYXRpb25BY3Rpb246IGVuZm9yY2UKICAgICAgICBzZXZlcml0eTogSGlnaAogICAgICAgIG9iamVjdC10ZW1wbGF0ZXM6CiAgICAgICAgLSBjb21wbGlhbmNlVHlwZTogbXVzdG5vdGhhdmUKICAgICAgICAgIG9iamVjdERlZmluaXRpb246CiAgICAgICAgICAgIGtpbmQ6IE5hbWVzcGFjZQogICAgICAgICAgICBhcGlWZXJzaW9uOiB2MQogICAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgICBuYW1lOiBpbnRlZ3JpdHktc2hpZWxkLW9wZXJhdG9yLXN5c3RlbQogIC0gb2JqZWN0RGVmaW5pdGlvbjoKICAgICAgYXBpVmVyc2lvbjogcG9saWN5Lm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvL3YxCiAgICAgIGtpbmQ6IENvbmZpZ3VyYXRpb25Qb2xpY3kKICAgICAgbWV0YWRhdGE6CiAgICAgICAgbmFtZTogcG9saWN5LWludGVncml0eS1zaGllbGQtb2cKICAgICAgc3BlYzoKICAgICAgICByZW1lZGlhdGlvbkFjdGlvbjogZW5mb3JjZQogICAgICAgIHNldmVyaXR5OiBoaWdoCiAgICAgICAgb2JqZWN0LXRlbXBsYXRlczoKICAgICAgICAtIGNvbXBsaWFuY2VUeXBlOiBtdXN0bm90aGF2ZQogICAgICAgICAgb2JqZWN0RGVmaW5pdGlvbjoKICAgICAgICAgICAgYXBpVmVyc2lvbjogb3BlcmF0b3JzLmNvcmVvcy5jb20vdjEKICAgICAgICAgICAga2luZDogT3BlcmF0b3JHcm91cAogICAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgICBuYW1lOiBpbnRlZ3JpdHktb3BlcmF0b3ItZ3JvdXAKICAgICAgICAgICAgICBuYW1lc3BhY2U6IGludGVncml0eS1zaGllbGQtb3BlcmF0b3Itc3lzdGVtCiAgICAgICAgICAgIHNwZWM6CiAgICAgICAgICAgICAgdGFyZ2V0TmFtZXNwYWNlczoKICAgICAgICAgICAgICAtIGludGVncml0eS1zaGllbGQtb3BlcmF0b3Itc3lzdGVtCiAgLSBvYmplY3REZWZpbml0aW9uOgogICAgICBhcGlWZXJzaW9uOiBwb2xpY3kub3Blbi1jbHVzdGVyLW1hbmFnZW1lbnQuaW8vdjEKICAgICAga2luZDogQ29uZmlndXJhdGlvblBvbGljeQogICAgICBtZXRhZGF0YToKICAgICAgICBuYW1lOiBwb2xpY3ktaW50ZWdyaXR5LXNoaWVsZC1zdWIKICAgICAgc3BlYzoKICAgICAgICByZW1lZGlhdGlvbkFjdGlvbjogZW5mb3JjZQogICAgICAgIHNldmVyaXR5OiBoaWdoCiAgICAgICAgb2JqZWN0LXRlbXBsYXRlczoKICAgICAgICAtIGNvbXBsaWFuY2VUeXBlOiBtdXN0bm90aGF2ZQogICAgICAgICAgb2JqZWN0RGVmaW5pdGlvbjoKICAgICAgICAgICAgYXBpVmVyc2lvbjogb3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEKICAgICAgICAgICAga2luZDogU3Vic2NyaXB0aW9uCiAgICAgICAgICAgIG1ldGFkYXRhOgogICAgICAgICAgICAgIG5hbWU6IGludGVncml0eS1zaGllbGQtb3BlcmF0b3IKICAgICAgICAgICAgICBuYW1lc3BhY2U6IGludGVncml0eS1zaGllbGQtb3BlcmF0b3Itc3lzdGVtCiAgICAgICAgICAgIHNwZWM6CiAgICAgICAgICAgICAgY2hhbm5lbDogYWxwaGEKICAgICAgICAgICAgICBpbnN0YWxsUGxhbkFwcHJvdmFsOiBBdXRvbWF0aWMKICAgICAgICAgICAgICBuYW1lOiBpbnRlZ3JpdHktc2hpZWxkLW9wZXJhdG9yCiAgICAgICAgICAgICAgc291cmNlOiBjb21tdW5pdHktb3BlcmF0b3JzCiAgICAgICAgICAgICAgc291cmNlTmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFya2V0cGxhY2UKICAgICAgICAgICAgICBzdGFydGluZ0NTVjogaW50ZWdyaXR5LXNoaWVsZC1vcGVyYXRvci52MC4xLjMKICAtIG9iamVjdERlZmluaXRpb246CiAgICAgIGFwaVZlcnNpb246IHBvbGljeS5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pby92MQogICAgICBraW5kOiBDb25maWd1cmF0aW9uUG9saWN5CiAgICAgIG1ldGFkYXRhOgogICAgICAgIG5hbWU6IHBvbGljeS1pbnRlZ3JpdHktc2hpZWxkLWNyCiAgICAgIHNwZWM6CiAgICAgICAgcmVtZWRpYXRpb25BY3Rpb246IGVuZm9yY2UKICAgICAgICBzZXZlcml0eTogaGlnaAogICAgICAgIG9iamVjdC10ZW1wbGF0ZXM6CiAgICAgICAgLSBjb21wbGlhbmNlVHlwZTogbXVzdG5vdGhhdmUKICAgICAgICAgIG9iamVjdERlZmluaXRpb246CiAgICAgICAgICAgIGFwaVZlcnNpb246IGFwaXMuaW50ZWdyaXR5c2hpZWxkLmlvL3YxYWxwaGExCiAgICAgICAgICAgIGtpbmQ6IEludGVncml0eVNoaWVsZAogICAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgICBuYW1lOiBpbnRlZ3JpdHktc2hpZWxkLXNlcnZlcgogICAgICAgICAgICAgIG5hbWVzcGFjZTogaW50ZWdyaXR5LXNoaWVsZC1vcGVyYXRvci1zeXN0ZW0KICAgICAgICAgICAgc3BlYzoKICAgICAgICAgICAgICBsb2dnZXI6CiAgICAgICAgICAgICAgICBpbWFnZTogcXVheS5pby9vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC9pbnRlZ3JpdHktc2hpZWxkLWxvZ2dpbmc6MC4xLjMKICAgICAgICAgICAgICBzZXJ2ZXI6CiAgICAgICAgICAgICAgICBpbWFnZTogcXVheS5pby9vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC9pbnRlZ3JpdHktc2hpZWxkLXNlcnZlcjowLjEuMwogICAgICAgICAgICAgIGFmZmluaXR5OiB7fQogICAgICAgICAgICAgIHNoaWVsZENvbmZpZzoKICAgICAgICAgICAgICAgIHZlcmlmeVR5cGU6IHBncCAjIHg1MDkKICAgICAgICAgICAgICAgIGlTaGllbGRBZG1pblVzZXJOYW1lOiAic3lzdGVtOnNlcnZpY2VhY2NvdW50Om9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LWFnZW50LWFkZG9uOmtsdXN0ZXJsZXQtYWRkb24tcG9saWN5Y3RybCxzeXN0ZW06c2VydmljZWFjY291bnQ6b3BlbnNoaWZ0LW9wZXJhdG9yLWxpZmVjeWNsZS1tYW5hZ2VyOm9sbS1vcGVyYXRvci1zZXJ2aWNlYWNjb3VudCIKICAgICAgICAgICAgICAgIGluU2NvcGVOYW1lc3BhY2VTZWxlY3RvcjoKICAgICAgICAgICAgICAgICAgaW5jbHVkZToKICAgICAgICAgICAgICAgICAgLSAiKiIKICAgICAgICAgICAgICAgICAgZXhjbHVkZToKICAgICAgICAgICAgICAgICAgLSAia3ViZS0qIgogICAgICAgICAgICAgICAgICAtICJvcGVuc2hpZnQtKiIKICAgICAgICAgICAgICBzaWduZXJDb25maWc6CiAgICAgICAgICAgICAgICBwb2xpY2llczoKICAgICAgICAgICAgICAgIC0gbmFtZXNwYWNlczoKICAgICAgICAgICAgICAgICAgLSAiKiIKICAgICAgICAgICAgICAgICAgc2lnbmVyczoKICAgICAgICAgICAgICAgICAgLSAiU2FtcGxlU2lnbmVyIgogICAgICAgICAgICAgICAgLSBzY29wZTogIkNsdXN0ZXIiCiAgICAgICAgICAgICAgICAgIHNpZ25lcnM6CiAgICAgICAgICAgICAgICAgIC0gIlNhbXBsZVNpZ25lciIKICAgICAgICAgICAgICAgIHNpZ25lcnM6CiAgICAgICAgICAgICAgICAtIG5hbWU6ICJTYW1wbGVTaWduZXIiCiAgICAgICAgICAgICAgICAgIGtleUNvbmZpZzogc2FtcGxlLXNpZ25lci1rZXljb25maWcKICAgICAgICAgICAgICAgICAgc3ViamVjdHM6CiAgICAgICAgICAgICAgICAgIC0gZW1haWw6ICIqIgogICAgICAgICAgICAgIGtleUNvbmZpZzoKICAgICAgICAgICAgICAtIG5hbWU6IHNhbXBsZS1zaWduZXIta2V5Y29uZmlnCiAgICAgICAgICAgICAgICBzZWNyZXROYW1lOiBrZXlyaW5nLXNlY3JldAogICAgICAgICAgICAgIHJlc291cmNlU2lnbmluZ1Byb2ZpbGVzOgogICAgICAgICAgICAgIC0gbmFtZTogcG9saWN5LXJzcAogICAgICAgICAgICAgICAgcHJvdGVjdFJ1bGVzOgogICAgICAgICAgICAgICAgLSBtYXRjaDoKICAgICAgICAgICAgICAgICAgLSBhcGlHcm91cDogcG9saWN5Lm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvCiAgICAgICAgICAgICAgICBpZ25vcmVSdWxlczoKICAgICAgICAgICAgICAgIC0gbWF0Y2g6CiAgICAgICAgICAgICAgICAgIC0gdXNlcm5hbWU6ICJzeXN0ZW06c2VydmljZWFjY291bnQ6b3Blbi1jbHVzdGVyLW1hbmFnZW1lbnQtYWdlbnQ6KiIKICAgICAgICAgICAgICAgICAgLSB1c2VybmFtZTogInN5c3RlbTpzZXJ2aWNlYWNjb3VudDpvcGVuLWNsdXN0ZXItbWFuYWdlbWVudC1hZ2VudC1hZGRvbjoqIgogICAgICAgICAgICAgICAgZm9yY2VDaGVja1J1bGVzOgogICAgICAgICAgICAgICAgLSBtYXRjaDoKICAgICAgICAgICAgICAgICAgLSBhcGlHcm91cDogcG9saWN5Lm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvCiAgICAgICAgICAgICAgICAgICAga2luZDogUG9saWN5CiAgICAgICAgICAgICAgICBrdXN0b21pemVQYXR0ZXJuczoKICAgICAgICAgICAgICAgIC0gbWF0Y2g6CiAgICAgICAgICAgICAgICAgIC0gYXBpR3JvdXA6IHBvbGljeS5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pbwogICAgICAgICAgICAgICAgICAgIGtpbmQ6IFBvbGljeQogICAgICAgICAgICAgICAgICBuYW1lUHJlZml4OiAiKi4iCiAgICAgICAgICAgICAgICB1bnByb3RlY3RBdHRyczoKICAgICAgICAgICAgICAgIC0gbWF0Y2g6CiAgICAgICAgICAgICAgICAgIC0gYXBpR3JvdXA6IHBvbGljeS5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pbwogICAgICAgICAgICAgICAgICBhdHRyczoKICAgICAgICAgICAgICAgICAgLSAibWV0YWRhdGEuYW5ub3RhdGlvbnMuXCJhcHBzLm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvL2hvc3RpbmctZGVwbG95YWJsZVwiIgogICAgICAgICAgICAgICAgICAtICJtZXRhZGF0YS5hbm5vdGF0aW9ucy5cImFwcHMub3Blbi1jbHVzdGVyLW1hbmFnZW1lbnQuaW8vaG9zdGluZy1zdWJzY3JpcHRpb25cIiIKICAgICAgICAgICAgICAgICAgLSAibWV0YWRhdGEuYW5ub3RhdGlvbnMuXCJhcHBzLm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvL3N5bmMtc291cmNlXCIiCiAgICAgICAgICAgICAgICAgIC0gIm1ldGFkYXRhLmxhYmVscy5cInBvbGljeS5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pby9jbHVzdGVyLW5hbWVcIiIKICAgICAgICAgICAgICAgICAgLSAibWV0YWRhdGEubGFiZWxzLlwicG9saWN5Lm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvL2NsdXN0ZXItbmFtZXNwYWNlXCIiCiAgICAgICAgICAgICAgICAgIC0gIm1ldGFkYXRhLmxhYmVscy5cInBvbGljeS5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pby9yb290LXBvbGljeVwiIgogICAgICAgICAgICAgICAgdGFyZ2V0TmFtZXNwYWNlU2VsZWN0b3I6CiAgICAgICAgICAgICAgICAgIGxhYmVsU2VsZWN0b3I6CiAgICAgICAgICAgICAgICAgICAgbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAgICAgICAtIGtleTogcG9saWN5Lm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvL2lzQ2x1c3Rlck5hbWVzcGFjZQogICAgICAgICAgICAgICAgICAgICAgb3BlcmF0b3I6IEluCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXM6IFsidHJ1ZSJdCiAgLSBvYmplY3REZWZpbml0aW9uOgogICAgICAjIFRoaXMgY29uZmlndXJhdGlvbiBwb2xpY3kgY2hlY2tzIGlmIHRoZSBvcGVyYXRvciByZWNvbmNpbGVkIGFsbCByZXNvdXJjZXMgY29ycmVjdGx5IG9yIG5vdAogICAgICAjIE9uY2UgYWxsIG9mIHRoZW0gYXJlIGZpbmlzaGVkLCB3ZWJob29rIHNob3VsZCBiZSB0aGVyZSwgYW5kIHRoaXMgcG9saWN5IHJlcG9ydHMgYENvbXBsaWFudGAKICAgICAgYXBpVmVyc2lvbjogcG9saWN5Lm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvL3YxCiAgICAgIGtpbmQ6IENvbmZpZ3VyYXRpb25Qb2xpY3kKICAgICAgbWV0YWRhdGE6CiAgICAgICAgbmFtZTogcG9saWN5LWludGVncml0eS1zaGllbGQtd2ViaG9vawogICAgICBzcGVjOgogICAgICAgIHJlbWVkaWF0aW9uQWN0aW9uOiBpbmZvcm0gIyB0aGlzIG11c3QgYmUgYWx3YXlzIGBpbmZvcm1gLgogICAgICAgIHNldmVyaXR5OiBsb3cKICAgICAgICBvYmplY3QtdGVtcGxhdGVzOgogICAgICAgIC0gY29tcGxpYW5jZVR5cGU6IG11c3Rub3RoYXZlCiAgICAgICAgICBvYmplY3REZWZpbml0aW9uOgogICAgICAgICAgICBhcGlWZXJzaW9uOiBhZG1pc3Npb25yZWdpc3RyYXRpb24uazhzLmlvL3YxCiAgICAgICAgICAgIGtpbmQ6IE11dGF0aW5nV2ViaG9va0NvbmZpZ3VyYXRpb24KICAgICAgICAgICAgbWV0YWRhdGE6CiAgICAgICAgICAgICAgbmFtZTogaXNoaWVsZC13ZWJob29rLWNvbmZpZwotLS0KYXBpVmVyc2lvbjogcG9saWN5Lm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvL3YxCmtpbmQ6IFBsYWNlbWVudEJpbmRpbmcKbWV0YWRhdGE6CiAgbmFtZTogYmluZGluZy1wb2xpY3ktaW50ZWdyaXR5LXNoaWVsZApwbGFjZW1lbnRSZWY6CiAgbmFtZTogcGxhY2VtZW50LXBvbGljeS1pbnRlZ3JpdHktc2hpZWxkCiAga2luZDogUGxhY2VtZW50UnVsZQogIGFwaUdyb3VwOiBhcHBzLm9wZW4tY2x1c3Rlci1tYW5hZ2VtZW50LmlvCnN1YmplY3RzOgotIG5hbWU6IHBvbGljeS1pbnRlZ3JpdHktc2hpZWxkCiAga2luZDogUG9saWN5CiAgYXBpR3JvdXA6IHBvbGljeS5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pbwotLS0KYXBpVmVyc2lvbjogYXBwcy5vcGVuLWNsdXN0ZXItbWFuYWdlbWVudC5pby92MQpraW5kOiBQbGFjZW1lbnRSdWxlCm1ldGFkYXRhOgogIG5hbWU6IHBsYWNlbWVudC1wb2xpY3ktaW50ZWdyaXR5LXNoaWVsZApzcGVjOgogIGNsdXN0ZXJDb25kaXRpb25zOgogIC0gc3RhdHVzOiAiVHJ1ZSIKICAgIHR5cGU6IE1hbmFnZWRDbHVzdGVyQ29uZGl0aW9uQXZhaWxhYmxlCiAgY2x1c3RlclNlbGVjdG9yOgogICAgbWF0Y2hFeHByZXNzaW9uczoKICAgIC0ge2tleTogZW52aXJvbm1lbnQsIG9wZXJhdG9yOiBJbiwgdmFsdWVzOiBbImRldiJdfQo=
    integrityshield.io/signature: LS0tLS1CRUdJTiBQR1AgU0lHTkFUVVJFLS0tLS0KCmlRRlBCQUFCQ0FBNUZpRUUrU2psQVN5SlZoa3FGVDNLT1Q2Y3pnLzRpcmtGQW1BUkVWSWJIR2hwY205cmRXNXAKTG10cGRHRm9ZWEpoTVVCcFltMHVZMjl0QUFvSkVEaytuTTRQK0lxNTl1Y0lBSVhlVW8zYVBpdEtYcnA4MmdrRwpPZUpHVEt0NUVHTUpxSDYxN1lCNVJST1g1TnhPNzNmUGlVNjcvNkhBRjZlazVhTzUydjY2QmFmSjdPRGNseUQrCjFxd1NQYmQraXVRU0Zrc243M0c5MFZUZkxoazRWekJyc2tJeUdraGpZM2swUVBGY2llWFNRcG5GTnBnYm00dG8KcEVYTG9kMXU0cU8rOERMaFBRemwvK2YrUDA0d2JsQmdyMDRFT0RvczNrMnBOUEtuOXVjMVRWY3FGZDR1Q0dPagp3WkNMdkdmN2lwc2hKN1hPaE1acmVLTVprclNqUWI1MHNsNEZGQlNuajY0L21MQlZZSERKT3FHUy9jWCtGdllPCm95aFI0NHBoenBwTTdGVUc0K3k3L084KzR6eUc3WmRaTWtZK3Y3dEVPYkJiL29WZVo3dFRzTUlvOXdpcTB5OHoKVW40PQo9ckhORQotLS0tLUVORCBQR1AgU0lHTkFUVVJFLS0tLS0K
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-namespace
      spec:
        remediationAction: enforce
        severity: High
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            kind: Namespace
            apiVersion: v1
            metadata:
              name: integrity-shield-operator-system
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-og
      spec:
        remediationAction: enforce
        severity: high
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: integrity-operator-group
              namespace: integrity-shield-operator-system
            spec:
              targetNamespaces:
              - integrity-shield-operator-system
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-sub
      spec:
        remediationAction: enforce
        severity: high
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: integrity-shield-operator
              namespace: integrity-shield-operator-system
            spec:
              channel: alpha
              installPlanApproval: Automatic
              name: integrity-shield-operator
              source: community-operators
              sourceNamespace: openshift-marketplace
              startingCSV: integrity-shield-operator.v0.1.3
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-cr
      spec:
        remediationAction: enforce
        severity: high
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: apis.integrityshield.io/v1alpha1
            kind: IntegrityShield
            metadata:
              name: integrity-shield-server
              namespace: integrity-shield-operator-system
            spec:
              logger:
                image: quay.io/open-cluster-management/integrity-shield-logging:0.1.3
              server:
                image: quay.io/open-cluster-management/integrity-shield-server:0.1.3
              affinity: {}
              shieldConfig:
                verifyType: pgp # x509
                iShieldAdminUserName: "system:serviceaccount:open-cluster-management-agent-addon:klusterlet-addon-policyctrl,system:serviceaccount:openshift-operator-lifecycle-manager:olm-operator-serviceaccount"
                inScopeNamespaceSelector:
                  include:
                  - "*"
                  exclude:
                  - "kube-*"
                  - "openshift-*"
              signerConfig:
                policies:
                - namespaces:
                  - "*"
                  signers:
                  - "SampleSigner"
                - scope: "Cluster"
                  signers:
                  - "SampleSigner"
                signers:
                - name: "SampleSigner"
                  keyConfig: sample-signer-keyconfig
                  subjects:
                  - email: "*"
              keyConfig:
              - name: sample-signer-keyconfig
                secretName: keyring-secret
              resourceSigningProfiles:
              - name: policy-rsp
                protectRules:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                ignoreRules:
                - match:
                  - username: "system:serviceaccount:open-cluster-management-agent:*"
                  - username: "system:serviceaccount:open-cluster-management-agent-addon:*"
                forceCheckRules:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                    kind: Policy
                kustomizePatterns:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                    kind: Policy
                  namePrefix: "*."
                unprotectAttrs:
                - match:
                  - apiGroup: policy.open-cluster-management.io
                  attrs:
                  - "metadata.annotations.\"apps.open-cluster-management.io/hosting-deployable\""
                  - "metadata.annotations.\"apps.open-cluster-management.io/hosting-subscription\""
                  - "metadata.annotations.\"apps.open-cluster-management.io/sync-source\""
                  - "metadata.labels.\"policy.open-cluster-management.io/cluster-name\""
                  - "metadata.labels.\"policy.open-cluster-management.io/cluster-namespace\""
                  - "metadata.labels.\"policy.open-cluster-management.io/root-policy\""
                targetNamespaceSelector:
                  labelSelector:
                    matchExpressions:
                    - key: policy.open-cluster-management.io/isClusterNamespace
                      operator: In
                      values: ["true"]
  - objectDefinition:
      # This configuration policy checks if the operator reconciled all resources correctly or not
      # Once all of them are finished, webhook should be there, and this policy reports `Compliant`
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-integrity-shield-webhook
      spec:
        remediationAction: inform # this must be always `inform`.
        severity: low
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: admissionregistration.k8s.io/v1
            kind: MutatingWebhookConfiguration
            metadata:
              name: ishield-webhook-config
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-integrity-shield
placementRef:
  name: placement-policy-integrity-shield
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-integrity-shield
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-integrity-shield
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
    - {key: environment, operator: In, values: ["dev"]}
